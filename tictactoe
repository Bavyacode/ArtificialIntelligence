def print_board(board):
    for row in board:
        print("|".join(row))
        print("-" * 5)

def check_winner(board, player):
    # Check rows
    for row in board:
        if all(s == player for s in row):
            return True

    # Check columns
    for col in range(3):
        if all(board[row][col] == player for row in range(3)):
            return True

    # Check diagonals
    if all(board[i][i] == player for i in range(3)):
        return True
    if all(board[i][2-i] == player for i in range(3)):
        return True

    return False

def is_draw(board):
    return all(all(cell != ' ' for cell in row) for row in board)

def get_move():
    while True:
        try:
            move = int(input("Enter your move (1-9): "))
            if move < 1 or move > 9:
                raise ValueError
            return move
        except ValueError:
            print("Invalid input. Please enter a number between 1 and 9.")

def make_move(board, move, player):
    row, col = divmod(move-1, 3)
    if board[row][col] == ' ':
        board[row][col] = player
        return True
    else:
        print("Invalid move. The cell is already taken.")
        return False

def play_game():
    board = [[' ' for _ in range(3)] for _ in range(3)]
    current_player = 'X'

    while True:
        print_board(board)
        move = get_move()

        if make_move(board, move, current_player):
            if check_winner(board, current_player):
                print_board(board)
                print(f"Player {current_player} wins!")
                break
            elif is_draw(board):
                print_board(board)
                print("The game is a draw!")
                break

            # Switch player
            current_player = 'O' if current_player == 'X' else 'X'

if __name__ == "__main__":
    play_game()
